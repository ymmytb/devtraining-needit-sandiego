<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="c94122494a362312007f2ce5bd78768f" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description>Only display What needed choices that match the Request type value.</description>
        <field>u_request_type</field>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>NeedIt Request Type Options</name>
        <order/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading, isTemplate) {
    if (newValue == '') {
        return;
    }
    var whatneeded = g_form.getValue('u_what_needed');
    // Clear all of the choices from the What needed field choice list
    g_form.clearOptions('u_what_needed');
    // If the the value of the Request type field is hr, add
    // two hr choices and other to the What needed field choice list
    if (newValue == 'hr') {
        g_form.addOption('u_what_needed', 'hr1', 'Human Resources 1');
        //g_form.addOption('u_what_needed', 'hr2', 'Human Resources 2');
        g_form.addOption('u_what_needed', 'other', 'Other');
    }
    // If the the value of the Request type field is facilities, add
    // two facilities choices and other to the What needed field
    // choice list
    if (newValue == 'facilities') {
        g_form.addOption('u_what_needed', 'facilities1', 'Facilities 1');
        //g_form.addOption('u_what_needed', 'facilities2', 'Facilities 2');
        g_form.addOption('u_what_needed', 'other', 'Other');
    }
    // If the the value of the Request type field is legal, add
    // two legal choices and other to the What needed field
    // choice list
    if (newValue == 'legal') {
        g_form.addOption('u_what_needed', 'legal1', 'Legal 1');
        //g_form.addOption('u_what_needed', 'legal2', 'Legal 2');
        g_form.addOption('u_what_needed', 'other', 'Other');
    }
	// If the the value of the Request type field is TPS Report, add
    // only other to the What needed field
    // choice list
    if (newValue == 'TPS Report') {
        g_form.addOption('u_what_needed', 'other', 'Other');
    }
	// Get sys_id for x_58872_needit.needit_user role
      var grNIUserRole = new GlideRecord('sys_user_role');
        grNIUserRole.get('name','x_58872_needit.needit_user');
      
      // Get list of domains that are not TOP or Default
      var grDomain = new GlideRecord('domain');
        grDomain.addQuery('name','!=','TOP');
        grDomain.addQuery('name','!=','Default');
        grDomain.query();
      
      while (grDomain.next()) {
        // Get Companies for each Domain
        var grCompany = new GlideRecord('core_company');
        grCompany.addQuery('sys_domain','=',grDomain.sys_id);
        grCompany.query();
      
        while (grCompany.next()) {
          // Create NeedIt Users group for the Company
          var grNIUserGroup = new GlideRecord('sys_user_group');
          grNIUserGroup.name = grCompany.name + " NeedIt Users";
          grNIUserGroup.company = grCompany.sys_id;
          grNIUserGroup.insert();
          
          // Add x_58872_needit.needit_user role to group
          var grGroupRole = new GlideRecord('sys_group_has_role');
          grGroupRole.group = grNIUserGroup.sys_id;
          grGroupRole.role = grNIUserRole.sys_id;
          grGroupRole.insert();
          
          // Find users in the company and add them to the group
          var grCompanyUsers = new GlideRecord('sys_user');
          grCompanyUsers.addQuery('company','=',grCompany.sys_id);
          grCompanyUsers.query();
      
          while (grCompanyUsers.next()) {
            // Add user to new group
            var grUserGroup = new GlideRecord('sys_user_grmember');
            grUserGroup.user = grCompanyUsers.sys_id;
            grUserGroup.group = grNIUserGroup.sys_id;
            grUserGroup.insert();
          }
        }
      }
      
      
      // Get sys_id for x_58872_needit.itil role
      var grNIItilRole = new GlideRecord('sys_user_role');
        grNIItilRole.get('name','x_58872_needit.itil');
        
      // Get sys_id for the itil role
      var grItilRole = new GlideRecord('sys_user_role');
        grItilRole.get('name','itil');
        
      // Add the x_58872_needit.itil role to the itil role
      var grRoleContains = new GlideRecord('sys_user_role_contains');
      grRoleContains.role = grItilRole.sys_id;
      grRoleContains.contains = grNIItilRole.sys_id;
      grRoleContains.insert();
    
    // Assign domain managers the approver_user role
    // Get sys_id for approver_user role
    var grApproverUserRole = new GlideRecord('sys_user_role');
        grApproverUserRole.get('name','approver_user');
        
      // Query for domain manager users
      var grDomainMgrs = new GlideRecord('sys_user');
    grDomainMgrs.addEncodedQuery('GOTOnameLIKEmanager^sys_domain!=global');
    grDomainMgrs.query();

    while (grDomainMgrs.next()) {
      // Insert work to do here
      var grApproverRole = new GlideRecord('sys_user_has_role');
      grApproverRole.user = grDomainMgrs.sys_id;
      grApproverRole.role = grApproverUserRole.sys_id;
      grApproverRole.insert();
    }

    // If the form is loading and it is not a new record, set the u_what_needed value to the
    // value from the record before it was loaded
    if (isLoading && !g_form.isNewRecord()) {
        g_form.setValue('u_what_needed', whatneeded);
    }
}]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-25 02:10:57</sys_created_on>
        <sys_domain>c94122494a362312007f2ce5bd78768f</sys_domain>
        <sys_domain_path>!!!/!!(/</sys_domain_path>
        <sys_id>2a29770d2f611510a90c2d5df699b612</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>NeedIt Request Type Options</sys_name>
        <sys_overrides display_value="NeedIt Request Type Options">fff4ad589f013200bde5f79ff57fcf84</sys_overrides>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_client_2a29770d2f611510a90c2d5df699b612</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-25 02:20:47</sys_updated_on>
        <table>x_58872_needit_needit</table>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <view/>
    </sys_script_client>
</record_update>
